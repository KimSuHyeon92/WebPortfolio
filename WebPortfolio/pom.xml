<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>WebPortfolio</groupId>
	<artifactId>WebPortfolio</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<!-- 배포용 설정파일 구분  빌드할때 프로파일 골라서 사용 -->
	<profiles>
		<!-- Local server -->
		<profile>
			<!--  -->
			<id>local</id>
			<activation>
			<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<env>local</env>
			</properties>
		</profile>
		<!-- real server -->
		<profile>
			<id>release</id>
			<properties>
				<env>release</env>
			</properties>
		</profile>

	</profiles>
	
	<properties>
		<spring.version>4.3.12.RELEASE</spring.version>
		<org.codehaus.jackson.version>1.9.13</org.codehaus.jackson.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.test.skip>true</maven.test.skip>
	</properties>
	
	<build>
		<finalName>WebPortfolio</finalName> <!-- 컨텍스트루트 와 동일 -->
		<testSourceDirectory>src/main/java/com/pf/test</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/main/resources-local</directory>
			</testResource>
			<testResource>
				<directory>src/main/resources-common</directory>
			</testResource>
		</testResources>
		
		<resources>
			<!-- 빌드할때 시스템관계없이무조건포함 -->
			<resource>
				<directory>src/main/resources-common</directory>
			</resource>
			<!-- 시스템별로 다를때 (local,release) 처럼 ${env} properties 의 버전을 읽어온다. (version) 을 env로 쓰겠다. 위 profiles 에서 env태그를 의미 ? 운영용 빌드인지 테스트빌드인지 구분 은 properties 로 구분 (  -p id값 ) -->
			<resource>
				<directory>src/main/resources-${env}</directory>
			</resource>
			<!-- maven자체에서 자바소스경로를 읽어오게끔 -->
			<resource>
				<directory>${project.build.sourceDirectory}</directory>
				<!-- .java파일만 읽어와 배포가능하게끔 없어도가능 기본적으로 자바파일만 읽어오기 때문에 -->
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
			<!-- 리소스 시스템 환경에 맞게 구분해주는 플러그인 (없으면 모든파일을 빌드시킨다 있어야지 local폴더 release폴더 등... 환경에 맞게 빌드시켜준다   -->
			<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
				     <encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<!-- 소스 버전 과 타겟버전이 같거나 소스버전이 타켓보다 낮아야 가능 -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<warSourceDirectory>WebContent</warSourceDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	
	<dependencies>
		<!-- start Jxls library (엑셀파일다운받기 필수 dependency -->
		<dependency>
		    <groupId>org.jxls</groupId>
		    <artifactId>jxls</artifactId>
		    <version>2.4.2</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>slf4j-api</artifactId>
		    	</exclusion>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>jcl-over-slf4j</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.jxls</groupId>
		    <artifactId>jxls-poi</artifactId>
		    <version>1.0.13</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>slf4j-api</artifactId>
		    	</exclusion>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>jcl-over-slf4j</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
		    <groupId>org.jxls</groupId>
		    <artifactId>jxls-jexcel</artifactId>
		    <version>1.0.6</version>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>slf4j-api</artifactId>
		    	</exclusion>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>jcl-over-slf4j</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
	        <groupId>net.sf.jxls</groupId>
	        <artifactId>jxls-core</artifactId>
	        <version>1.0.6</version>
	        <exclusions>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>slf4j-api</artifactId>
		    	</exclusion>
		    	<exclusion>
		    		<groupId>org.slf4j</groupId>
		    		<artifactId>jcl-over-slf4j</artifactId>
		    	</exclusion>
		    </exclusions>
	    </dependency>
		<!-- end  Jxls library -->
		
		<!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.22.0-GA</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>23.4-jre</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.reflections/reflections -->
		<dependency>
		    <groupId>org.reflections</groupId>
		    <artifactId>reflections</artifactId>
		    <version>0.9.11</version>
		</dependency>
		<!-- Apache Commons Upload -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!-- Apache Commons Upload -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        
        
        
        <!-- springframework 설정파일  -->
        
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.3.12.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.12.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.3.12.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.3.12.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.12.RELEASE</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>4.0.0</version>
    <scope>provided</scope>
</dependency>

		
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/taglibs/standard -->
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.44</version>
		</dependency>



		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test 
		dao테스트를 위해사용 (기존url접속방식대신) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.12.RELEASE</version>
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.4.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring 
		마이바티스와스프링연결 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<!-- <scope>test</scope> -->
			<!-- test라고 만 적혀있으면 test할때만 사용되지만 우리는 war파일로 보내야..? -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/c3p0/c3p0
		datasource.xml에서 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 클래스주소사용가능 -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>
		
		
		<!-- json libraries start -->
        <dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		 </dependency>
		 
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${org.codehaus.jackson.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${org.codehaus.jackson.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.2</version>
		</dependency>
		
		
		
		<!-- 메일을보낼수있다. -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.5.0-b01</version>
		</dependency>
		
		<!-- 메일을보낼수있다. https://mvnrepository.com/artifact/org.springframework/spring-context-support -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context-support</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		
		<!-- 쿼리 디버그찍기 -->
		<dependency>
		    <groupId>org.lazyluke</groupId>
		    <artifactId>log4jdbc-remix</artifactId>
		    <version>0.2.7</version>
		</dependency>


		
		
	</dependencies>
		


	

</project>